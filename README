--------------------------------
DaisyWorks firmware repository
--------------------------------

-------------------------
| Pre-requisites
------------------------- 
** !!!! IF YOU'RE TRYING TO BUILD ON A PLATFORM OTHER THAN LINUX YOU ARE ON YOUR OWN !!!! **  
We build the firmware on Linux.  I'm sure these Makefiles could be ported to Win/Mac, but we haven't bothered to try yet.

You need all the stuff below before you try to begin:

  # avr tools (compiler/linker/libs for Atmel AVR targets)

  Debian Install:
	sudo apt-get install avr-gcc avr-g++ avr-libc

  # Arduino SDK
	
Download the package here: http://www.arduino.cc/en/Main/Software and unzip it somewhere.  You'll need to modify the Makefile to point here.

  # Gnu Make (already installed)

  # avrdude AVRDUDE is an open source utility to download/upload/manipulate the ROM and EEPROM contents of AVR microcontrollers using the in-system programming technique (ISP).

  Debian Install:
	sudo apt-get install avrdude

  # Python with pySerial package - needed to toggle DTR/RTS when uploading

  Debian Install:
	sudo apt-get install python-serial

-------------------------
| Build
-------------------------
Step into a subdir for a firmware image, and:

$ cp Makefile.sample Makefile

Now, edit Makefile to your environment.

$ make
$ make clean

-------------------------
| Libraries
-------------------------
There are two types of library includes.  You can include any of the base libraries that ship with the Arduino SDK.
You'll find these under $ARDUINO_HOME/libraries.  So, for example, to include the SD library in your .pde file, you'd
do this:

#include <SD.h>

Outside libraries that you might grab from the net somewhere can be placed in the firmware directories local ./libraries/ folder.
You need to name the folder the same as the header file...just like the Arduino libraries.

Any libraries will be included underneath the directory ./libraries

For example:
	libraries/CmdMessenger/
	libraries/Streaming/
	libraries/Base64/

If you drop a new folder in there with lib source code it will be included in the build.

To include these libraries in your code, you do it like this:

#include "Streaming.h"

--------------------------
| Upload
--------------------------

$ make upload

This calls out to avrdude directly.  Before doing so, it calls the python reset.py script to toggle DTR/RTS.


